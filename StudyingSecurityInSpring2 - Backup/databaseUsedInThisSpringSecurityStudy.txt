CREATE TABLE band (
  id INTEGER UNSIGNED  NOT NULL   AUTO_INCREMENT,
  title VARCHAR(50)  NULL  ,
  b_yearFormation VARCHAR(4)  NULL    ,
PRIMARY KEY(id));



CREATE TABLE Users (
  id INTEGER UNSIGNED  NOT NULL   AUTO_INCREMENT,
  real_name VARCHAR(50)  NULL  ,
  rg VARCHAR(12)  NULL  ,
  username VARCHAR(20)  NULL  ,
  u_password VARCHAR(500)  NULL    ,
PRIMARY KEY(id));



CREATE TABLE Album (
  id INTEGER UNSIGNED  NOT NULL   AUTO_INCREMENT,
  band_id INTEGER UNSIGNED  NOT NULL  ,
  title VARCHAR(50)  NULL  ,
  a_yearReleased VARCHAR(4)  NULL    ,
PRIMARY KEY(id)  ,
INDEX Album_FKIndex1(band_id),
  FOREIGN KEY(band_id)
    REFERENCES band(id)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);



CREATE TABLE Song (
  id INTEGER UNSIGNED  NOT NULL   AUTO_INCREMENT,
  Album_id INTEGER UNSIGNED  NOT NULL  ,
  title VARCHAR(20)  NULL  ,
  s_length VARCHAR(5)  NULL    ,
PRIMARY KEY(id)  ,
INDEX Song_FKIndex1(Album_id),
  FOREIGN KEY(Album_id)
    REFERENCES Album(id)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);



CREATE TABLE Users_has_Song (
  Users_id INTEGER UNSIGNED  NOT NULL  ,
  Song_id INTEGER UNSIGNED  NOT NULL    ,
PRIMARY KEY(Users_id, Song_id)  ,
INDEX Users_has_Song_FKIndex1(Users_id)  ,
INDEX Users_has_Song_FKIndex2(Song_id),
  FOREIGN KEY(Users_id)
    REFERENCES Users(id)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(Song_id)
    REFERENCES Song(id)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

